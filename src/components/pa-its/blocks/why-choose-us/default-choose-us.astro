---
import { Image as AstroImage, type ImageMetadata } from 'astro:assets';

type Feature = {
  iconSvg?: string;
  iconImg?: ImageMetadata;
  iconBg?: string;
  title: string;
  description: string;
};

interface Props {
  title?: string;
  subtitle?: string;
  subtitleAccent?: string;
  features: Feature[];
  image: ImageMetadata;
  imageAlt?: string;
  frameAccentClass?: string;
  sectionBgClass?: string;
}

const {
  title,
  subtitle,
  subtitleAccent = '#FF6A3D',
  features,
  image,
  imageAlt = 'Showcase',
  frameAccentClass = 'border-[#1E90FF]',
  sectionBgClass = 'bg-[linear-gradient(180deg,#F1F8FF_0%,#F7FBFF_100%)]',
} = Astro.props as Props;

/** Fallbacks to keep visuals stable if a card misses some values */
const normalize = (f: Feature): Required<Feature> => ({
  iconSvg: f.iconSvg ?? '',
  iconImg: f.iconImg!,
  iconBg: f.iconBg ?? 'bg-blue-50',
  title: f.title ?? '',
  description: f.description ?? '',
});
const normalized = features.map(normalize);
---

<section class={`py-16 md:py-20 ${sectionBgClass}`}>
  <div class="mx-auto max-w-6xl px-4">
    <!-- Section heading -->
    <div class="text-center mb-10 md:mb-12">
      <h2 class="text-3xl md:text-5xl font-extrabold text-[#0C2A43] tracking-tight">
        {title}
      </h2>
      <span
        class="mt-0 inline-block h-[4px] w-14 rounded-full"
        style={`background:${subtitleAccent}`}
        aria-hidden="true"></span>

      <h3 class="text-mdl md:text-xl font-extrabold text-[#0C2A43] tracking-tight">{subtitle}</h3>
    </div>

    <div class="grid grid-cols-1 gap-8 lg:grid-cols-2 lg:gap-12 items-center">
      <div class="flex flex-col gap-6">
        {
          normalized.map((item) => (
            <article class="rounded-2xl bg-white/90 shadow-[0_10px_30px_rgba(20,60,100,0.08)] ring-1 ring-primary/20 px-6 py-5 md:px-7 md:py-6 backdrop-blur-sm">
              <div class="flex gap-4">
                <div class={`shrink-0 ${item.iconBg} rounded-xl h-14 w-14 grid place-items-center`}>
                  {item.iconSvg ? (
                    <div class="text-[#4B7BE5]" set:html={item.iconSvg} />
                  ) : item.iconImg ? (
                    <AstroImage src={item.iconImg} alt="" class="h-8 w-8 object-contain" />
                  ) : null}
                </div>

                <div class="min-w-0">
                  <h3 class="text-lg md:text-xl font-semibold text-[#1A3452]">{item.title}</h3>
                  <p class="mt-1 text-[15px] leading-relaxed text-[#56708C]">{item.description}</p>
                </div>
              </div>
            </article>
          ))
        }
      </div>

      <div class="relative">
        <div class={`rounded-[94px_0px_94px_0px] border-r-[10px] boder-[#016250] border-t-[10px] ${frameAccentClass} `}>
          <div class="rounded-[90px_0px_90px_0px] overflow-hidden">
            <AstroImage src={image} alt={imageAlt} class="h-full w-full object-cover" loading="lazy" />
          </div>
        </div>

        <div class="pointer-events-none absolute -inset-4 -z-10 rounded-[34px] bg-[#1E90FF]/10 blur-2xl"></div>
      </div>
    </div>
  </div>
</section>
