---
import SectionWrapper from '~/layouts/SectionWrapper.astro';
import Image from '~/components/common/Image.astro';
import { type ImageMetadata } from 'astro';

export interface GalleryImage {
  src: ImageMetadata;
  alt?: string;
  title?: string;
  description?: string;
}

export interface Props {
  title: string;
  description?: string;
  images: GalleryImage[];
  columnsDesktop?: number;
  columnsTablet?: number;
  columnsMobile?: number;
}

const { title, description, images, columnsDesktop = 3, columnsTablet = 2, columnsMobile = 1 } = Astro.props;

const getGridClass = () => {
  let gridClass = 'grid gap-4 ';
  gridClass += `grid-cols-${columnsMobile} `;
  gridClass += `md:grid-cols-${columnsTablet} `;
  gridClass += `lg:grid-cols-${columnsDesktop}`;
  return gridClass;
};
---

<SectionWrapper>
  <div class="container mx-auto px-4">
    <div class="text-center mb-12">
      <h2 class="text-3xl font-bold mb-4">{title}</h2>
      {description && <p class="text-gray-600 dark:text-gray-400 max-w-3xl mx-auto">{description}</p>}
    </div>

    <div class={getGridClass()}>
      {
        images.map((image) => (
          <div class="overflow-hidden rounded-lg shadow-md transition-transform duration-300 hover:scale-[1.02] h-full flex flex-col">
            <div class="aspect-w-4 aspect-h-3 overflow-hidden">
              <Image
                src={image.src}
                alt={image.alt}
                class="object-cover w-full h-full"
                loading="lazy"
                width={600}
                height={450}
              />
            </div>
            {(image.title || image.description) && (
              <div class="p-4 bg-white dark:bg-gray-800 flex-grow">
                {image.title && <h3 class="font-bold text-lg mb-2">{image.title}</h3>}
                {image.description && <p class="text-gray-600 dark:text-gray-400 text-sm">{image.description}</p>}
              </div>
            )}
          </div>
        ))
      }
    </div>
  </div>
</SectionWrapper>
