---
import { type ImageMetadata } from 'astro';
import Button from '~/components/pa-its/Button.astro';
import { type Props as ButtonProps } from '~/components/pa-its/Button.astro';
import { Image } from 'astro:assets';
import SectionWrapper from '~/layouts/SectionWrapper.astro';

interface Feature {
  logo: ImageMetadata;
  href: string;
  alt: string;
}

interface NewFeature {
  new: string;
  title: string;
  href: string;
}

export interface Props {
  title: string;
  subtitle: string;
  featuresTitle?: string;
  features?: Feature[];
  callToActions?: ButtonProps[];
  newFeature?: NewFeature;
  backgroundImage: ImageMetadata;
}

const { title, subtitle, featuresTitle, features, callToActions, newFeature, backgroundImage } = Astro.props;
---

<SectionWrapper
  id="hero"
  containerClass="flex flex-col items-center text-center min-h-[70vh] lg:min-h-[80vh] justify-center"
>
  {
    backgroundImage && (
      <div class="absolute inset-0 w-full h-full overflow-hidden">
        <Image src={backgroundImage} alt="Hero Background" class="object-cover w-full h-full" />
        <div class="absolute inset-0 bg-black bg-opacity-60" />
      </div>
    )
  }
  {
    newFeature && (
      <a
        href={newFeature?.href}
        target="_blank"
        class="inline-flex justify-between items-center py-1 px-1 pr-4 mb-7 text-sm text-gray-700 bg-gray-100 rounded-full dark:bg-gray-700 dark:text-white hover:bg-gray-200 dark:hover:bg-gray-600 transition-all"
        role="button"
        aria-label="Neue Funktion! Direkte Hilfe Ã¼ber unser neues Support-Portal!"
      >
        <span class="text-xs font-bold bg-primary-600 rounded-full text-white px-4 py-1.5 mr-3">{newFeature?.new}</span>
        <span class="text-sm font-medium">{newFeature?.title}</span>
        <svg class="ml-2 w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
          <path
            fill-rule="evenodd"
            d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
            clip-rule="evenodd"
          />
        </svg>
      </a>
    )
  }
  <h1
    class="mb-4 text-4xl font-heading z-10 font-extrabold leading-none text-white md:text-5xl lg:text-6xl [text-shadow:_2px_2px_4px_rgb(0_0_0_/_50%)] drop-shadow-lg"
    set:html={title}
  />
  <h2
    class="w-5/6 mb-8 text-lg z-10 font-normal text-white lg:text-xl sm:px-16 xl:px-48 [text-shadow:_1px_1px_2px_rgb(0_0_0_/_50%)] drop-shadow-md"
    set:html={subtitle}
  />
  <div class="flex flex-col mb-8 z-10 lg:mb-16 sm:flex-row sm:justify-center items-center gap-5">
    {callToActions?.map((cta) => <Button {...cta} />)}
  </div>
  {
    featuresTitle && features && (
      <div class="px-4 mx-auto text-center md:max-w-screen-md lg:max-w-screen-lg lg:px-36">
        <span class="font-semibold text-gray-500">{featuresTitle}</span>
        <div class="flex flex-row flex-wrap gap-8 justify-center items-center mt-8 text-gray-500 sm:justify-between">
          {features.map((feature) => (
            <a
              href={feature.href}
              target="_blank"
              class="mr-5 mb-5 lg:mb-0 grayscale opacity-60 hover:opacity-90 dark:opacity-50 dark:hover:opacity-60 hover:text-gray-800 dark:hover:text-gray-400 transition duration-200 hover:grayscale-0"
            >
              <Image src={feature.logo} alt={feature.alt} class="h-16 w-auto" />
            </a>
          ))}
        </div>
      </div>
    )
  }
</SectionWrapper>
