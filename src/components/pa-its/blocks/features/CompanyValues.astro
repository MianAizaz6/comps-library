---
export interface Props {
  title?: string;
  description?: string;
  values: Array<{
    title: string;
    description: string;
    icon: string;
    color?: string;
  }>;
  showHighlight?: boolean;
}

const { title, description, values, showHighlight = false } = Astro.props;
---

<section class={`py-16 md:py-20 ${showHighlight ? 'bg-gray-50 dark:bg-gray-900' : ''}`}>
  <div class="max-w-6xl mx-auto px-4 sm:px-6">
    {
      (title || description) && (
        <div class="text-center mb-12">
          {title && (
            <h2 class="text-3xl font-bold tracking-tight text-gray-900 dark:text-white sm:text-4xl mb-4">{title}</h2>
          )}
          {description && <p class="text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">{description}</p>}
        </div>
      )
    }

    <div class="grid md:grid-cols-3 gap-8">
      {
        values.map((value) => (
          <div class="text-center p-6 bg-white dark:bg-gray-800 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300">
            <div class="w-16 h-16 bg-primary-600 rounded-full flex items-center justify-center mx-auto mb-4">
              <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={value.icon} />
              </svg>
            </div>
            <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3">{value.title}</h3>
            <p class="text-gray-600 dark:text-gray-300 text-sm leading-relaxed">{value.description}</p>
          </div>
        ))
      }
    </div>
  </div>
</section>
